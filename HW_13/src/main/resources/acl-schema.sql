create table IF NOT EXISTS system_message (id integer not null, content varchar(255), primary key (id));

CREATE TABLE IF NOT EXISTS acl_sid (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  principal tinyint(1) NOT NULL,
  sid varchar(100) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_1 (sid,principal)
);

CREATE TABLE IF NOT EXISTS acl_class (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  class varchar(255) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_2 (class)
);

CREATE TABLE IF NOT EXISTS acl_entry (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  acl_object_identity bigint(20) NOT NULL,
  ace_order int(11) NOT NULL,
  sid bigint(20) NOT NULL,
  mask int(11) NOT NULL,
  granting tinyint(1) NOT NULL,
  audit_success tinyint(1) NOT NULL,
  audit_failure tinyint(1) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_4 (acl_object_identity,ace_order)
);

CREATE TABLE IF NOT EXISTS acl_object_identity (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  object_id_class bigint(20) NOT NULL,
  object_id_identity bigint(20) NOT NULL,
  parent_object bigint(20) DEFAULT NULL,
  owner_sid bigint(20) DEFAULT NULL,
  entries_inheriting tinyint(1) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_3 (object_id_class,object_id_identity)
);

ALTER TABLE acl_entry
ADD FOREIGN KEY (acl_object_identity) REFERENCES acl_object_identity(id);

ALTER TABLE acl_entry
ADD FOREIGN KEY (sid) REFERENCES acl_sid(id);

--
-- Constraints for table acl_object_identity
--
ALTER TABLE acl_object_identity
ADD FOREIGN KEY (parent_object) REFERENCES acl_object_identity (id);

ALTER TABLE acl_object_identity
ADD FOREIGN KEY (object_id_class) REFERENCES acl_class (id);

ALTER TABLE acl_object_identity
ADD FOREIGN KEY (owner_sid) REFERENCES acl_sid (id);


create table IF NOT EXISTS author (id bigint generated by default as identity, name varchar(100) not null, primary key (id));
create table IF NOT EXISTS book (id bigint generated by default as identity, description varchar(255), name varchar(100) not null, primary key (id));
create table IF NOT EXISTS book_author (book_id bigint not null, author_id bigint not null, primary key (book_id, author_id));
create table IF NOT EXISTS book_genre (book_id bigint not null, genre_id bigint not null, primary key (book_id, genre_id));
create table IF NOT EXISTS  comment (id bigint generated by default as identity, book_id bigint not null, review varchar(150) not null, primary key (id));
create table IF NOT EXISTS genre (id bigint generated by default as identity, name varchar(100) not null, primary key (id));
create table IF NOT EXISTS lib_user (id bigint generated by default as identity, password varchar(100) not null, role varchar(100) not null, username varchar(100) not null, primary key (id));
alter table book_author add constraint FKbjqhp85wjv8vpr0beygh6jsgo foreign key (author_id) references author;
alter table book_author add constraint FKhwgu59n9o80xv75plf9ggj7xn foreign key (book_id) references book;
alter table book_genre add constraint FK8l6ops8exmjrlr89hmfow4mmo foreign key (genre_id) references genre;
alter table book_genre add constraint FK52evq6pdc5ypanf41bij5u218 foreign key (book_id) references book;
